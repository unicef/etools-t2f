version: 2
jobs:
  test:
    working_directory: ~/code
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: circleci/node:8-stretch-browsers
    steps:
      - checkout
      - restore_cache:
          key: cache1-{{ checksum "package.json" }}
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - restore_cache:
          key: dependency-cache-{{ checksum "bower.json" }}
      - run:
          name: Install bower components
          command: ./node_modules/.bin/bower install --allow-root --config.interactive=false
      - save_cache:
          key: dependency-cache-{{ checksum "bower.json" }}
          paths:
            - bower_components


  build_and_deploy:
    working_directory: ~/code
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
          # build and push Docker image
      - run:
          name: Building the image
          command: |
            TAG=${CIRCLE_BRANCH}
            docker build -t unicef/etools-t2f:$TAG .
          no_output_timeout: 20m
      - run:
          name: Pushing to Docker Hub
          command: |
            TAG=${CIRCLE_BRANCH}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push unicef/etools-t2f:$TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - build_and_deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - staging
                - develop
                - build-fix
